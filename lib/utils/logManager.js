"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = require("fs-extra");
const moment = require("moment");
const fs = require("fs");
const path = require("path");
const console_1 = require("console");
function setLogger(config) {
    const _console = {
        log: console.log,
        info: console.info,
        warn: console.warn,
        error: console.error,
        time: console.time,
        timeEnd: console.timeEnd,
        trace: console.trace,
    };
    const logPath = (config && config.out_file) ? path.dirname(config.out_file) : path.resolve(process.env.HOME, './rocker_logs');
    fs_extra_1.ensureDirSync(logPath);
    const output = fs.createWriteStream(config && config.out_file || path.resolve(logPath, './stdout.log'));
    const errorOutput = fs.createWriteStream(config && config.error_file || path.resolve(logPath, './stderr.log'));
    const logger = new console_1.Console(output, errorOutput);
    global.console.log = function (...args) {
        fotmatLog(args, 'LOG');
        _console.log(...args);
        logger.log(...args);
    };
    global.console.info = function (...args) {
        fotmatLog(args, 'INFO');
        _console.info(...args);
        logger.info(...args);
    };
    global.console.warn = function (...args) {
        fotmatLog(args, 'WARN');
        _console.warn(...args);
        logger.warn(...args);
    };
    global.console.error = function (...args) {
        fotmatLog(args, 'ERROR');
        _console.error(...args);
        logger.error(...args);
    };
    global.console.time = function (...args) {
        fotmatLog(args, 'TIME');
        _console.time(...args);
        logger.time(...args);
    };
    global.console.timeEnd = function (...args) {
        fotmatLog(args, 'TIME');
        _console.timeEnd(...args);
        logger.timeEnd(...args);
    };
    global.console.trace = function (...args) {
        fotmatLog(args, 'TARCE');
        _console.trace(...args);
        logger.trace(...args);
    };
}
exports.setLogger = setLogger;
function fotmatLog(args, type) {
    if (typeof args[0] == 'string' || typeof args[0] == 'number') {
        let info = `${moment().format('YYYY-MM-DD hh:mm:ss')} ${type} `;
        if (!/\[worker]\(\d+\)/.test(args[0])) {
            info += `[master](${process.pid}) `;
        }
        args[0] = info + args[0];
    }
    else {
        if (Array.isArray(args[0])) {
            args[0].unshift(`${moment().format('YYYY-MM-DD hh:mm:ss')} ${type} `);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nTWFuYWdlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxvZ01hbmFnZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx1Q0FBd0M7QUFDeEMsaUNBQWdDO0FBQ2hDLHlCQUF3QjtBQUN4Qiw2QkFBNEI7QUFDNUIscUNBQWlDO0FBQ2pDLFNBQWdCLFNBQVMsQ0FBQyxNQUFXO0lBQ2pDLE1BQU0sUUFBUSxHQUFHO1FBQ2YsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHO1FBQ2hCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtRQUNsQixJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7UUFDbEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO1FBQ3BCLElBQUksRUFBRSxPQUFPLENBQUMsSUFBSTtRQUNsQixPQUFPLEVBQUUsT0FBTyxDQUFDLE9BQU87UUFDeEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO0tBQ3JCLENBQUE7SUFFRCxNQUFNLE9BQU8sR0FBRyxDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLGVBQWUsQ0FBQyxDQUFBO0lBQzdILHdCQUFhLENBQUMsT0FBTyxDQUFDLENBQUE7SUFFdEIsTUFBTSxNQUFNLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUE7SUFDdkcsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sSUFBSSxNQUFNLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLGNBQWMsQ0FB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