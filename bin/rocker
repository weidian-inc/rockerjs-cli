#!/usr/bin/env node
'use strict';
var commander = require('commander')
var pkg       = require('../package.json')
var shell = require('shelljs')
var gen = require('../lib/gen/index')

commander.version(pkg.version)
  .option('-v --version', 'print rocker version')
  // .option('-l --log [path]', 'specify log file which gathers both stdout and stderr')
  .option('-n --name <name>', 'set a name for the process in the process list')
  .option('-i --instances <number>', 'launch [number] instances (for networked app)(load balanced)')
  .usage('[cmd] app');

commander.command('start [name|file|ecosystem|id...]')
  // .option('--watch', 'Watch folder for changes')
  .option('--node-version [major]', 'with --container, set a specific major Node.js version')
  .description('start and daemonize an app')
  .action(async (cmd, opts) => {
    
  })

commander.parse(process.argv)
// console.log('commander', commander);
// let count = commander.instances || 1

shell.exec(`nohup node ./lib/gen/watch > /dev/null 2>&1 &`, {silent:true})
// process.on('uncaughtException:', err => {
//   console.log('uncaughtException', err)
//   rocker.onReload()
// });
// process.on('unhandledRejection', (reason, p) => {
//   console.log('unhandledRejection:', p, '原因：', reason)
//   rocker.onReload()
// })